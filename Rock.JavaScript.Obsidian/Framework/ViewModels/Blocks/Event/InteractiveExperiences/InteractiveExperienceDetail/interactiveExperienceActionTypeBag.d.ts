//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { Guid } from "@Obsidian/Types";
import { PublicAttributeBag } from "@Obsidian/ViewModels/Utility/publicAttributeBag";

/**
 * Identifies a single action type that can be used to configure actions
 * for an experience by the individual.
 */
export type InteractiveExperienceActionTypeBag = {
    /** Gets or sets the unique identifier for this type of action. */
    guid?: Guid | null;

    /** Gets or sets the display name for this type of action. */
    name?: string | null;

    /**
     * Gets or sets the icon CSS class that will visually represent this
     * action type.
     */
    iconCssClass?: string | null;

    /** Gets or sets a value indicating whether this type supports question text. */
    isQuestionSupported: boolean;

    /** Gets or sets a value indicating whether this type supports moderation. */
    isModerationSupported: boolean;

    /** Gets or sets a value indicating whether this type allows multiple submissions. */
    isMultipleSubmissionSupported: boolean;

    /** Gets or sets the attributes that are available on this action type. */
    attributes?: Record<string, PublicAttributeBag> | null;
};
